
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASC BY COMMA COUNT DELETE DESC EQ FROM GE GT IDENTIFIER INSERT INTO LE LPAREN LT NEQ NOT NUMBER OR ORDER RPAREN SELECT SET STRING_LITERAL TIMES UPDATE VALUES WHEREquery : select_query\n             | insert_query\n             | update_query\n             | delete_queryselect_query : SELECT select_columns FROM IDENTIFIER where_clause_opt order_by_optselect_columns : column_list\n                     | COUNT LPAREN TIMES RPARENinsert_query : INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN\n                    | INSERT INTO IDENTIFIER VALUES LPAREN value_list RPARENupdate_query : UPDATE IDENTIFIER SET set_list where_clause_optdelete_query : DELETE FROM IDENTIFIER where_clause_optset_list : set_item\n               | set_item COMMA set_listset_item : IDENTIFIER EQ valuevalue_list : value\n                 | value COMMA value_listcolumn_list : TIMES\n                  | IDENTIFIER\n                  | IDENTIFIER COMMA column_listwhere_clause_opt : WHERE condition\n                        | emptyorder_by_opt : ORDER BY order_list\n                    | emptyorder_list : order_item\n                 | order_item COMMA order_listorder_item : IDENTIFIER asc_descasc_desc : ASC\n                | DESC\n                | emptycondition : simple_condition\n                | LPAREN condition RPAREN\n                | condition AND condition\n                | condition OR condition\n                | NOT conditionsimple_condition : IDENTIFIER operator valueoperator : EQ\n                | NEQ\n                | GT\n                | LT\n                | GE\n                | LEvalue : NUMBER\n             | STRING_LITERALempty :'
    
_lr_action_items = {'SELECT':([0,],[6,]),'INSERT':([0,],[7,]),'UPDATE':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,23,24,30,31,32,34,35,40,42,43,47,49,53,54,55,56,60,70,72,73,74,75,76,77,78,82,83,84,85,87,88,],[0,-1,-2,-3,-4,-44,-44,-44,-12,-11,-21,-44,-10,-20,-30,-5,-23,-42,-43,-14,-13,-34,-9,-32,-33,-31,-35,-22,-24,-44,-26,-27,-28,-29,-25,-8,]),'COUNT':([6,],[13,]),'TIMES':([6,19,20,27,],[14,14,26,14,]),'IDENTIFIER':([6,8,15,17,18,19,22,27,33,41,44,45,57,58,68,81,],[11,16,21,23,24,11,29,11,46,29,46,46,46,46,78,78,]),'INTO':([7,],[15,]),'FROM':([9,10,11,12,14,25,36,],[17,18,-18,-6,-17,-19,-7,]),'RPAREN':([11,14,25,26,37,43,51,52,53,54,59,60,72,73,74,75,80,86,],[-18,-17,-19,36,50,-30,70,-15,-42,-43,74,-34,-32,-33,-31,-35,-16,88,]),'COMMA':([11,31,52,53,54,55,77,78,82,83,84,85,],[19,41,71,-42,-43,-14,81,-44,-26,-27,-28,-29,]),'LPAREN':([13,21,28,33,44,45,57,58,69,],[20,27,38,44,44,44,44,44,79,]),'SET':([16,],[22,]),'VALUES':([21,50,],[28,69,]),'WHERE':([23,24,30,31,53,54,55,56,],[33,33,33,-12,-42,-43,-14,-13,]),'ORDER':([24,34,35,42,43,53,54,60,72,73,74,75,],[-44,-21,48,-20,-30,-42,-43,-34,-32,-33,-31,-35,]),'EQ':([29,46,],[39,62,]),'NOT':([33,44,45,57,58,],[45,45,45,45,45,]),'NUMBER':([38,39,61,62,63,64,65,66,67,71,79,],[53,53,53,-36,-37,-38,-39,-40,-41,53,53,]),'STRING_LITERAL':([38,39,61,62,63,64,65,66,67,71,79,],[54,54,54,-36,-37,-38,-39,-40,-41,54,54,]),'AND':([42,43,53,54,59,60,72,73,74,75,],[57,-30,-42,-43,57,57,57,57,-31,-35,]),'OR':([42,43,53,54,59,60,72,73,74,75,],[58,-30,-42,-43,58,58,58,58,-31,-35,]),'NEQ':([46,],[63,]),'GT':([46,],[64,]),'LT':([46,],[65,]),'GE':([46,],[66,]),'LE':([46,],[67,]),'BY':([48,],[68,]),'ASC':([78,],[83,]),'DESC':([78,],[84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select_query':([0,],[2,]),'insert_query':([0,],[3,]),'update_query':([0,],[4,]),'delete_query':([0,],[5,]),'select_columns':([6,],[10,]),'column_list':([6,19,27,],[12,25,37,]),'set_list':([22,41,],[30,56,]),'set_item':([22,41,],[31,31,]),'where_clause_opt':([23,24,30,],[32,35,40,]),'empty':([23,24,30,35,78,],[34,34,34,49,85,]),'condition':([33,44,45,57,58,],[42,59,60,72,73,]),'simple_condition':([33,44,45,57,58,],[43,43,43,43,43,]),'order_by_opt':([35,],[47,]),'value_list':([38,71,79,],[51,80,86,]),'value':([38,39,61,71,79,],[52,55,75,52,52,]),'operator':([46,],[61,]),'order_list':([68,81,],[76,87,]),'order_item':([68,81,],[77,77,]),'asc_desc':([78,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select_query','query',1,'p_query','parser_sql.py',5),
  ('query -> insert_query','query',1,'p_query','parser_sql.py',6),
  ('query -> update_query','query',1,'p_query','parser_sql.py',7),
  ('query -> delete_query','query',1,'p_query','parser_sql.py',8),
  ('select_query -> SELECT select_columns FROM IDENTIFIER where_clause_opt order_by_opt','select_query',6,'p_select_query','parser_sql.py',12),
  ('select_columns -> column_list','select_columns',1,'p_select_columns','parser_sql.py',22),
  ('select_columns -> COUNT LPAREN TIMES RPAREN','select_columns',4,'p_select_columns','parser_sql.py',23),
  ('insert_query -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN','insert_query',10,'p_insert_query','parser_sql.py',30),
  ('insert_query -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN','insert_query',7,'p_insert_query','parser_sql.py',31),
  ('update_query -> UPDATE IDENTIFIER SET set_list where_clause_opt','update_query',5,'p_update_query','parser_sql.py',48),
  ('delete_query -> DELETE FROM IDENTIFIER where_clause_opt','delete_query',4,'p_delete_query','parser_sql.py',57),
  ('set_list -> set_item','set_list',1,'p_set_list','parser_sql.py',65),
  ('set_list -> set_item COMMA set_list','set_list',3,'p_set_list','parser_sql.py',66),
  ('set_item -> IDENTIFIER EQ value','set_item',3,'p_set_item','parser_sql.py',73),
  ('value_list -> value','value_list',1,'p_value_list','parser_sql.py',77),
  ('value_list -> value COMMA value_list','value_list',3,'p_value_list','parser_sql.py',78),
  ('column_list -> TIMES','column_list',1,'p_column_list','parser_sql.py',85),
  ('column_list -> IDENTIFIER','column_list',1,'p_column_list','parser_sql.py',86),
  ('column_list -> IDENTIFIER COMMA column_list','column_list',3,'p_column_list','parser_sql.py',87),
  ('where_clause_opt -> WHERE condition','where_clause_opt',2,'p_where_clause_opt','parser_sql.py',94),
  ('where_clause_opt -> empty','where_clause_opt',1,'p_where_clause_opt','parser_sql.py',95),
  ('order_by_opt -> ORDER BY order_list','order_by_opt',3,'p_order_by_opt','parser_sql.py',99),
  ('order_by_opt -> empty','order_by_opt',1,'p_order_by_opt','parser_sql.py',100),
  ('order_list -> order_item','order_list',1,'p_order_list','parser_sql.py',104),
  ('order_list -> order_item COMMA order_list','order_list',3,'p_order_list','parser_sql.py',105),
  ('order_item -> IDENTIFIER asc_desc','order_item',2,'p_order_item','parser_sql.py',109),
  ('asc_desc -> ASC','asc_desc',1,'p_asc_desc','parser_sql.py',116),
  ('asc_desc -> DESC','asc_desc',1,'p_asc_desc','parser_sql.py',117),
  ('asc_desc -> empty','asc_desc',1,'p_asc_desc','parser_sql.py',118),
  ('condition -> simple_condition','condition',1,'p_condition','parser_sql.py',122),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','parser_sql.py',123),
  ('condition -> condition AND condition','condition',3,'p_condition','parser_sql.py',124),
  ('condition -> condition OR condition','condition',3,'p_condition','parser_sql.py',125),
  ('condition -> NOT condition','condition',2,'p_condition','parser_sql.py',126),
  ('simple_condition -> IDENTIFIER operator value','simple_condition',3,'p_simple_condition','parser_sql.py',150),
  ('operator -> EQ','operator',1,'p_operator','parser_sql.py',158),
  ('operator -> NEQ','operator',1,'p_operator','parser_sql.py',159),
  ('operator -> GT','operator',1,'p_operator','parser_sql.py',160),
  ('operator -> LT','operator',1,'p_operator','parser_sql.py',161),
  ('operator -> GE','operator',1,'p_operator','parser_sql.py',162),
  ('operator -> LE','operator',1,'p_operator','parser_sql.py',163),
  ('value -> NUMBER','value',1,'p_value','parser_sql.py',167),
  ('value -> STRING_LITERAL','value',1,'p_value','parser_sql.py',168),
  ('empty -> <empty>','empty',0,'p_empty','parser_sql.py',172),
]
